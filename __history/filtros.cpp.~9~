//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "filtros.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
    Form1->Color = clWhite;
	ComboBox1->Items->Add("MÁSCARA 01");
	ComboBox1->Items->Add("MÁSCARA 02");
	ComboBox1->Items->Add("MÁSCARA 03");
	ComboBox1->Items->Add("MÁSCARA 04");
}
//---------------------------------------------------------------------------
void __fastcall TForm1::SpeedButton3Click(TObject *Sender)
{
    Image1->Picture->LoadFromFile("5.bmp"); // Carregando imagem
	Image1->Stretch = true; //redimensiona
	Image1->Refresh(); //atualiza
}
//---------------------------------------------------------------------------
void __fastcall TForm1::ComboBox1Change(TObject *Sender)
{
	AnsiString mascara;
	mascara = ComboBox1->Text;
	if(mascara == "MÁSCARA 01"){
		mascara01[0][0] = 0;
		mascara01[0][1] = 1;
		mascara01[0][2] = 0;

		mascara01[1][0] = 1;
		mascara01[1][1] = -4;
		mascara01[1][2] = 1;

		mascara01[2][0] = 0;
		mascara01[2][1] = 1;
		mascara01[2][2] = 0;
	}
	else{
		if(mascara == "MÁSCARA 02"){
			mascara02[0][0] = 1;
			mascara02[0][1] = 1;
			mascara02[0][2] = 1;

			mascara02[1][0] = 1;
			mascara02[1][1] = -8;
			mascara02[1][2] = 1;

			mascara02[2][0] = 1;
			mascara02[2][1] = 1;
			mascara02[2][2] = 1;
		}
		else{
			if(mascara == "MÁSCARA 03"){
				mascara03[0][0] = 0;
				mascara03[0][1] = -1;
				mascara03[0][2] = 0;

				mascara03[1][0] = -1;
				mascara03[1][1] = 4;
				mascara03[1][2] = -1;

				mascara03[2][0] = 0;
				mascara03[2][1] = -1;
				mascara03[2][2] = 0;
			}
			else{
				if(mascara == "MÁSCARA 04"){
					mascara04[0][0] = -1;
					mascara04[0][1] = -1;
					mascara04[0][2] = -1;

					mascara04[1][0] = -1;
					mascara04[1][1] = 8;
					mascara04[1][2] = -1;

					mascara04[2][0] = -1;
					mascara04[2][1] = -1;
					mascara04[2][2] = -1;
				}
            }

		}
    }
}
//---------------------------------------------------------------------------
void __fastcall TForm1::SpeedButton1Click(TObject *Sender)
{
	int x, y, z, a, r, g, b;
	for(x = 0; x < Image1->Width; x++){
		for(y = 0; y < Image1->Height; y++){

			for(z = 0; z < 3; z++){
				for(a = 0; a < 3; a++){

				}
			}
		}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::SpeedButton2Click(TObject *Sender)
{
//	Graphics::TBitmap *passaAltas = new Graphics::TBitmap();
//	passaAltas->LoadFromFile("5.bmp");
//	RGBTRIPLE *r;
//	int luminosidade, posicao;
//	float valor1, valor2;
//
//	for(int j = 0; j < Image1->Height; j++){
//		r = (RGBTRIPLE*)passaAltas->ScanLine[j];   //Scanline retorna memoria do Bitmap
//		for(int i = 0; i < Image1->Width; i++){
//			//r = abs(r*3-c1-c2-c3)/4
//			valor1 = GetRValue(Image1->Canvas->Pixels[i-1][j]) - GetRValue(Image1->Canvas->Pixels[i+1][j]) - GetRValue(Image1->Canvas->Pixels[i-1][j+1])
//			- GetRValue(Image1->Canvas->Pixels[i+1][j+1]) - GetRValue(Image1->Canvas->Pixels[i+1][j-1]) - GetRValue(Image1->Canvas->Pixels[i-1][j-1]);
//			valor1 = valor1/4;
//
//			valor2 = GetRValue(Image1->Canvas->Pixels[i][j+1]) - GetRValue(Image1->Canvas->Pixels[i][j-1]) - GetRValue(Image1->Canvas->Pixels[i-1][j+1]) -
//			GetRValue(Image1->Canvas->Pixels[i+1][j+1]) - GetRValue(Image1->Canvas->Pixels[i+1][j-1]) - GetRValue(Image1->Canvas->Pixels[i-1][j-1]);
//			valor2 = valor2/4;
//
//			//Obtém a magnitude do gradiente.
//			float valorGradiente = sqrt(pow(valor1, 2) + pow(valor2, 2));
//
//			r->rgbtRed = valorGradiente;
//			r->rgbtGreen = valorGradiente;
//			r->rgbtBlue = valorGradiente;
//			r++;
//		}
//	}
//	Image1->Picture->Assign(passaAltas);
}
//---------------------------------------------------------------------------
